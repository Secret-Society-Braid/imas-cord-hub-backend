openapi: 3.0.0
info:
  description: >-
    This is the definition of ImasCordHub Collections that is used by Original
    ImasCordHub front-end software.

    This definition and examples for the developer who writes the code for
    developing imas-related software like me.

    If there is an unconscious point for you about this definition, feel free to
    file an issue on GitHub project page!
  title: "API"
  version: "1.0.0"
  license: 
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: 'Ranfa (aliases: hizumiaoba)'
    url: https://hizumiaoba.github.io/Personal-pages/
servers: 
  - url: http://localhost:{port}
    description: Local server
    variables:
      port:
        default: '8080'
        description: The port on which the server is listening
tags:
  - name: Metadata
    description: API for metadata
  - name: Server
    description: Fetch server informations
  - name: Fansite
    description: Fetch fansite informations
paths:
  /:
    get:
      operationId: getMetadata
      summary: Fetch metadata
      security: []
      tags:
        - 'Metadata'
      description: "Fetch meta message from API server (Fixed response)"
      responses:
        '200':
          description: Returns fixed response. (i.e. Always returns same response)
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, There! This is the API of imas Discord Server Collections! Visit link below to find your favorite one!"
                  site:
                    type: string
                    example: "https://imas-cord-hub.netlify.app/"
        '418':
          description: There is no error response.
  /server:
    get: 
      operationId: "getServer"
      summary: "Fetch server informations"
      security: []
      tags: 
        -  Server
      description: Fetch server informations from API server
      parameters: 
        - $ref: "#/components/parameters/paging"
      responses: 
        '200':
          description: "Success"
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: "#/components/schemas/server"
        '400':
          description: "Bad Request"
          content: 
            application/json:
              schema: 
                type: object
                description: The specified page number is invalid
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Invalid page number
  /server/{id}:
    get: 
      operationId: "getServerById"
      summary: "Fetch server informations by id"
      security: []
      tags: 
        -  Server
      description: "Fetch server informations from API server by id"
      parameters: 
        - $ref: "#/components/parameters/idpath"
      responses: 
        '200':
          description: You successfully retrieved server informations
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/server"
        '400':
          description: The specified id or page number is invalid (i.e. not integer, negative number, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidparamerror"
        '404':
          description: The specified id of server is not found
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/notfounderror"
  /server/search/{keyword}:
    get: 
      operationId: "searchServer"
      summary: "Search server informations by keyword"
      security: []
      tags: 
        -  Server
      description: "Search server informations from API server by keyword"
      parameters: 
        - $ref: "#/components/parameters/keywordpath"
        - $ref: "#/components/parameters/paging"
        - $ref: "#/components/parameters/searchtargetquery"
      responses: 
        '200':
          description: You successfully retrieved server informations
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: "#/components/schemas/server"
        '400':
          description: The specified page number is invalid (i.e. not integer, negative number, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidparamerror"
        '404':
          description: The specified keyword of server is not found
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/notfounderror"
  /fansite:
    get: 
      operationId: "getFansite"
      summary: "Fetch fansite informations"
      security: []
      tags: 
        -  Fansite
      description: Fetch fansite informations from API server
      parameters: 
        - $ref: "#/components/parameters/paging"
      responses:
        '200':
          description: "Success"
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: "#/components/schemas/fansite"
        '400':
          description: The specified page number is invalid (i.e. not integer, negative number, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidparamerror"
  /fansite/{id}:
    get: 
      operationId: "getFansiteById"
      summary: "Fetch fansite informations by id"
      security: []
      tags: 
        -  Fansite
      description: "Fetch fansite informations from API server by id"
      parameters: 
        - $ref: "#/components/parameters/idpath"
      responses: 
        '200':
          description: You successfully retrieved fansite informations
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/fansite"
        '400':
          description: The specified id or page number is invalid (i.e. not integer, negative number, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidparamerror"
        '404':
          description: The specified id of fansite is not found
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/notfounderror"
  /fansite/search/{keyword}:
    get: 
      operationId: "searchFansite"
      summary: "Search fansite informations by keyword"
      security: []
      tags: 
        -  Fansite
      description: "Search fansite informations from API server by keyword"
      parameters: 
        - $ref: "#/components/parameters/keywordpath"
        - $ref: "#/components/parameters/paging"
        - $ref: "#/components/parameters/searchtargetquery"
      responses: 
        '200':
          description: You successfully retrieved fansite informations
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: "#/components/schemas/fansite"
        '400':
          description: The specified page number is invalid (i.e. not integer, negative number, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalidparamerror"
        '404':
          description: The specified keyword of fansite is not found
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/notfounderror"
components: 
  schemas: 
    ipenum:
      title: ipEnum
      type: string
      enum:
        - 765as
        - cinderella
        - million
        - shiny
        - sidem
        - joint
      description: The enum value of the ip that the server is targeting
      example: 765as
    waifu:
      type: string
      example: 天海春香
      description: The name of the waifu idol which this is targeting
    description: 
      type: string
      example: "This is the server of 765as"
      description: The description provided by the server owner
    invite:
      type: string
      example: "https://discord.gg/example"
      description: The invite link of the server
    server:
        title: serverResponse
        type: object
        description: "Response from server"
        properties:
          id:
            type: integer
            example: 1
            description: The integer value of the server id (unique)
          name:
            type: string
            description: The name of the server (Discord Server Name)
            example: CordHub001
          ip:
            $ref: "#/components/schemas/ipenum"
          waifu:
            type: array
            items:
              $ref: "#/components/schemas/waifu"
          description:
            $ref: "#/components/schemas/description"
          invite:
            $ref: "#/components/schemas/invite"
    invalidparamerror:
      title: invalidParamError
      type: object
      description: The specified id or page number was invalid
      properties:
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Invalid id or page number
    notfounderror:
      title: notFoundError
      type: object
      description: The server or fansite associated with the specified id was not found
      properties:
        error:
          type: string
          example: Not Found
        message:
          type: string
          example: Server or Fansite not found
    paginationParameter:
      type: integer
      example: 1
      description: The integer value of the page number of the result
    fansite:
      type: object
      description: The fansite information
      properties:
        id:
          type: integer
          example: 1
          description: The integer value of the fansite id (unique)
        name:
          type: string
          example: "CordHub"
          description: The name of the fansite
        waifu:
          $ref: "#/components/schemas/waifu"
        description:
          $ref: "#/components/schemas/description"
        link:
          type: string
          example: 'https://example.com/fansite/CordHub'
          description: The link of the fansite
  parameters:
    idpath:
      name: id
      in: path
      description: The integer value of the server id (unique)
      required: true
      schema: 
        type: integer
        example: 1
    keywordpath:
      name: keyword
      in: path
      description: The keyword to search server informations
      required: true
      schema: 
        type: string
        example: "765as"
    searchtargetquery:
      name: searchTarget
      in: query
      description: The target of the search term
      required: false
      schema: 
        type: string
        enum:
          - itself
          - waifu
        example: itself
        default: itself
    paging:
      name: page
      in: query
      description: The integer value of the page number of the result
      required: false
      schema:
        $ref: "#/components/schemas/paginationParameter"
